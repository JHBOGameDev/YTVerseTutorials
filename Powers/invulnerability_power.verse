using { /Fortnite.com/Devices }
using { /Fortnite.com/Characters }
using { /Verse.org/Simulation }
using { /UnrealEngine.com/Temporary/Diagnostics }

<# CODE WRITTEN BY JHBOGameDev #>

invulnerability_power := class(creative_device):

    @editable
    SignalRemote : signal_remote_manager_device = signal_remote_manager_device{}

    @editable
    SignalRemoteGranter : item_granter_device = item_granter_device{}

    @editable
    InvulnerabilityVFX : visual_effect_powerup_device = visual_effect_powerup_device{}

    @editable
    SoundEffect : audio_player_device = audio_player_device{}

    @editable
    PlayerSpawner : player_spawner_device = player_spawner_device{}

    @editable
    # Invulnerability duration, effect and sound.
    var Duration :float = 5.0

    # Only the stored agent can use the SignalRemote.
    var MaybeRegisteredPlayer : ?agent = false

    OnBegin<override>()<suspends>:void=
        PlayerSpawner.SpawnedEvent.Subscribe(OnPlayerSpawned)
        SignalRemote.PrimarySignalEvent.Subscribe(OnPrimarySignaled)
        InvulnerabilityVFX.SetDuration(Duration)

    OnPlayerSpawned(Agent:agent):void=
        # Stores the Agent generated by the player spawner.
        set MaybeRegisteredPlayer = option{Agent}
        SignalRemoteGranter.GrantItem(Agent)

    # Signaled when a player has triggered the *Primary* signal using a *Signal Remote* item.
    OnPrimarySignaled(Agent:agent):void=
        # Gets the saved agent and compares it with the one the signal remote is using.
        if (RegisteredPlayer := MaybeRegisteredPlayer?, RegisteredPlayer = Agent):
            # If the agent is stored it allows you to use the activate function.
            Activate(Agent)

    Activate<private>(Agent:agent): void=
        if (FortCharacter := Agent.GetFortCharacter[]):
            EnableEffects(Agent)
            spawn { SetInvulnerability(FortCharacter)}

    EnableEffects<private>(Agent:agent):void=
        InvulnerabilityVFX.Pickup(Agent)
        SoundEffect.Play(Agent)

    SetInvulnerability<private>(FortCharacter:fort_character)<suspends>:void=
        FortCharacter.SetVulnerability(false)
        Sleep(Duration)
        FortCharacter.SetVulnerability(true)
